import fs from 'fs-extra';
import path from 'path';
import { ProjectConfig } from '../types';

export async function createProjectStructure(config: ProjectConfig, projectPath: string) {
  const { typescript, appRouter, template } = config;
  const ext = typescript ? 'tsx' : 'jsx';
  const jsExt = typescript ? 'ts' : 'js';

  // Create directory structure
  await fs.ensureDir(path.join(projectPath, 'src'));
  await fs.ensureDir(path.join(projectPath, 'public'));
  
  if (config.shadcn) {
    await fs.ensureDir(path.join(projectPath, 'src/components/ui'));
    await fs.ensureDir(path.join(projectPath, 'src/lib'));
  }

  if (appRouter) {
    await fs.ensureDir(path.join(projectPath, 'src/app'));
    await createAppRouterStructure(config, projectPath, ext);
  } else {
    await fs.ensureDir(path.join(projectPath, 'src/pages'));
    await createPagesRouterStructure(config, projectPath, ext);
  }

  // Create components based on template
  await createTemplateFiles(config, projectPath, ext, jsExt);

  // Create public assets
  await createPublicAssets(projectPath);
}

async function createAppRouterStructure(config: ProjectConfig, projectPath: string, ext: string) {
  const { typescript, tailwind, shadcn } = config;

  // Create layout.tsx
  const layoutContent = `${typescript ? 'import type { Metadata } from \'next\'' : ''}
import { Inter } from 'next/font/google'
${tailwind ? 'import \'./globals.css\'' : ''}

const inter = Inter({ subsets: ['latin'] })

${typescript ? `export const metadata: Metadata = {
  title: '${config.projectName}',
  description: 'Generated by Radnt CLI',
}` : ''}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  )
}`;

  await fs.writeFile(path.join(projectPath, 'src/app', `layout.${ext}`), layoutContent);

  // Create page.tsx
  const pageContent = getPageContent(config, ext);
  await fs.writeFile(path.join(projectPath, 'src/app', `page.${ext}`), pageContent);

  // Create globals.css if Tailwind is enabled
  if (tailwind) {
    const globalsCss = `@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 84% 4.9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}`;

    await fs.writeFile(path.join(projectPath, 'src/app/globals.css'), globalsCss);
  }
}

async function createPagesRouterStructure(config: ProjectConfig, projectPath: string, ext: string) {
  const { typescript, tailwind } = config;

  // Create _app.tsx
  const appContent = `${tailwind ? 'import \'../styles/globals.css\'' : ''}
${typescript ? 'import type { AppProps } from \'next/app\'' : ''}

export default function App({ Component, pageProps }${typescript ? ': AppProps' : ''}) {
  return <Component {...pageProps} />
}`;

  await fs.writeFile(path.join(projectPath, 'src/pages', `_app.${ext}`), appContent);

  // Create index.tsx
  const indexContent = getPageContent(config, ext);
  await fs.writeFile(path.join(projectPath, 'src/pages', `index.${ext}`), indexContent);

  // Create styles directory and globals.css
  if (tailwind) {
    await fs.ensureDir(path.join(projectPath, 'src/styles'));
    const globalsCss = `@tailwind base;
@tailwind components;
@tailwind utilities;`;
    
    await fs.writeFile(path.join(projectPath, 'src/styles/globals.css'), globalsCss);
  }
}

function getPageContent(config: ProjectConfig, ext: string): string {
  const { template, shadcn, tailwind } = config;

  switch (template) {
    case 'dashboard':
      return getDashboardPageContent(shadcn, tailwind);
    case 'ecommerce':
      return getEcommercePageContent(shadcn, tailwind);
    case 'blog':
      return getBlogPageContent(shadcn, tailwind);
    case 'portfolio':
      return getPortfolioPageContent(shadcn, tailwind);
    default:
      return getBasicPageContent(shadcn, tailwind);
  }
}

function getBasicPageContent(shadcn: boolean, tailwind: boolean): string {
  if (shadcn && tailwind) {
    return `import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"

export default function Home() {
  return (
    <main className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
      {/* Hero Section */}
      <div className="relative overflow-hidden">
        <div className="absolute inset-0 bg-grid-slate-100 [mask-image:linear-gradient(0deg,white,rgba(255,255,255,0.6))] -z-10" />
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-20 pb-16">
          <div className="text-center">
            <Badge variant="secondary" className="mb-4 px-3 py-1">
              ✨ Built with Radnt CLI
            </Badge>
            <h1 className="text-5xl md:text-7xl font-bold bg-gradient-to-r from-slate-900 via-blue-900 to-indigo-900 bg-clip-text text-transparent mb-6">
              Welcome to your
              <br />
              <span className="text-blue-600">Radnt App</span> 🚀
            </h1>
            <p className="text-xl md:text-2xl text-slate-600 mb-8 max-w-3xl mx-auto leading-relaxed">
              Your Next.js project with shadcn/ui is ready to go. Start building amazing experiences with modern tools and beautiful components.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="px-8 py-3 text-lg">
                Get Started
              </Button>
              <Button variant="outline" size="lg" className="px-8 py-3 text-lg">
                View Documentation
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Features Section */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-slate-900 mb-4">
            Everything you need to build fast
          </h2>
          <p className="text-lg text-slate-600 max-w-2xl mx-auto">
            Pre-configured with the best tools and practices for modern web development
          </p>
        </div>
        
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          <Card className="group hover:shadow-xl transition-all duration-300 border-0 shadow-lg hover:-translate-y-1">
            <CardHeader className="pb-4">
              <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300">
                <span className="text-2xl">⚡</span>
              </div>
              <CardTitle className="text-xl font-semibold">Fast Development</CardTitle>
              <CardDescription className="text-slate-600">
                Enhanced dev server with hot reload, live updates, and instant feedback
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Button className="w-full group-hover:bg-blue-600 transition-colors">
                Get Started
              </Button>
            </CardContent>
          </Card>
          
          <Card className="group hover:shadow-xl transition-all duration-300 border-0 shadow-lg hover:-translate-y-1">
            <CardHeader className="pb-4">
              <div className="w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300">
                <span className="text-2xl">🎨</span>
              </div>
              <CardTitle className="text-xl font-semibold">Beautiful UI</CardTitle>
              <CardDescription className="text-slate-600">
                Pre-configured with shadcn/ui components and Tailwind CSS for stunning designs
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Button variant="outline" className="w-full group-hover:bg-purple-50 group-hover:border-purple-300 transition-colors">
                Learn More
              </Button>
            </CardContent>
          </Card>
          
          <Card className="group hover:shadow-xl transition-all duration-300 border-0 shadow-lg hover:-translate-y-1">
            <CardHeader className="pb-4">
              <div className="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300">
                <span className="text-2xl">🔧</span>
              </div>
              <CardTitle className="text-xl font-semibold">Modern Tools</CardTitle>
              <CardDescription className="text-slate-600">
                TypeScript, ESLint, Prettier, and more configured out of the box
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Button variant="secondary" className="w-full group-hover:bg-green-100 transition-colors">
                Explore Tools
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>

      {/* Tech Stack Section */}
      <div className="bg-white/50 backdrop-blur-sm border-y border-slate-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          <div className="text-center mb-12">
            <h3 className="text-2xl font-bold text-slate-900 mb-4">Built with the best</h3>
            <p className="text-slate-600">Powered by industry-leading technologies</p>
          </div>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8 items-center justify-items-center">
            <div className="flex flex-col items-center space-y-2 group">
              <div className="w-16 h-16 bg-black rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
                <span className="text-white font-bold text-xl">N</span>
              </div>
              <span className="text-sm font-medium text-slate-700">Next.js 15</span>
            </div>
            <div className="flex flex-col items-center space-y-2 group">
              <div className="w-16 h-16 bg-blue-500 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
                <span className="text-white font-bold text-xl">TS</span>
              </div>
              <span className="text-sm font-medium text-slate-700">TypeScript</span>
            </div>
            <div className="flex flex-col items-center space-y-2 group">
              <div className="w-16 h-16 bg-cyan-500 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
                <span className="text-white font-bold text-xl">TW</span>
              </div>
              <span className="text-sm font-medium text-slate-700">Tailwind CSS</span>
            </div>
            <div className="flex flex-col items-center space-y-2 group">
              <div className="w-16 h-16 bg-slate-900 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform">
                <span className="text-white font-bold text-xl">UI</span>
              </div>
              <span className="text-sm font-medium text-slate-700">shadcn/ui</span>
            </div>
          </div>
        </div>
      </div>

      {/* CTA Section */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
        <div className="bg-gradient-to-r from-blue-600 to-indigo-600 rounded-3xl p-8 md:p-12 text-center text-white">
          <h3 className="text-3xl md:text-4xl font-bold mb-4">
            Ready to build something amazing?
          </h3>
          <p className="text-xl mb-8 text-blue-100 max-w-2xl mx-auto">
            Start developing with the most modern stack and ship faster than ever before.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Button size="lg" variant="secondary" className="px-8 py-3 text-lg">
              Start Building
            </Button>
            <Button size="lg" variant="outline" className="px-8 py-3 text-lg border-white text-white hover:bg-white hover:text-blue-600">
              View Examples
            </Button>
          </div>
        </div>
      </div>
    </main>
  )
}`;
  }

  return `export default function Home() {
  return (
    <main${tailwind ? ' className="min-h-screen p-8"' : ''}>
      <div${tailwind ? ' className="max-w-4xl mx-auto text-center"' : ''}>
        <h1${tailwind ? ' className="text-4xl font-bold mb-4"' : ''}>
          Welcome to your Radnt App! 🚀
        </h1>
        <p${tailwind ? ' className="text-xl text-gray-600"' : ''}>
          Your Next.js project is ready to go.
        </p>
      </div>
    </main>
  )
}`;
}

function getDashboardPageContent(shadcn: boolean, tailwind: boolean): string {
  return `import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"

export default function Dashboard() {
  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">Dashboard</h1>
          <p className="text-gray-600">Welcome to your admin dashboard</p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="pb-2">
              <CardTitle className="text-sm font-medium text-gray-600">Total Users</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">1,234</div>
              <p className="text-xs text-green-600">+12% from last month</p>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-2">
              <CardTitle className="text-sm font-medium text-gray-600">Revenue</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">$12,345</div>
              <p className="text-xs text-green-600">+8% from last month</p>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-2">
              <CardTitle className="text-sm font-medium text-gray-600">Orders</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">567</div>
              <p className="text-xs text-red-600">-2% from last month</p>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader className="pb-2">
              <CardTitle className="text-sm font-medium text-gray-600">Active Now</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">89</div>
              <p className="text-xs text-gray-600">+5 from last hour</p>
            </CardContent>
          </Card>
        </div>
        
        <Card>
          <CardHeader>
            <CardTitle>Recent Activity</CardTitle>
            <CardDescription>Latest updates from your dashboard</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="flex items-center space-x-4">
                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                <div className="flex-1">
                  <p className="text-sm font-medium">New user registered</p>
                  <p className="text-xs text-gray-500">2 minutes ago</p>
                </div>
              </div>
              <div className="flex items-center space-x-4">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                <div className="flex-1">
                  <p className="text-sm font-medium">Order completed</p>
                  <p className="text-xs text-gray-500">5 minutes ago</p>
                </div>
              </div>
              <div className="flex items-center space-x-4">
                <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                <div className="flex-1">
                  <p className="text-sm font-medium">Payment pending</p>
                  <p className="text-xs text-gray-500">10 minutes ago</p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}`;
}

function getEcommercePageContent(shadcn: boolean, tailwind: boolean): string {
  return `import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"

export default function Store() {
  const products = [
    { id: 1, name: "Premium Headphones", price: "$299", image: "🎧" },
    { id: 2, name: "Wireless Mouse", price: "$79", image: "🖱️" },
    { id: 3, name: "Mechanical Keyboard", price: "$159", image: "⌨️" },
    { id: 4, name: "4K Monitor", price: "$599", image: "🖥️" },
  ];

  return (
    <div className="min-h-screen bg-white">
      <header className="bg-gray-900 text-white p-6">
        <div className="max-w-7xl mx-auto">
          <h1 className="text-3xl font-bold">Tech Store</h1>
          <p className="text-gray-300">Premium tech products for professionals</p>
        </div>
      </header>
      
      <main className="max-w-7xl mx-auto p-6">
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-4">Featured Products</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {products.map((product) => (
              <Card key={product.id} className="hover:shadow-lg transition-shadow">
                <CardHeader className="text-center">
                  <div className="text-6xl mb-4">{product.image}</div>
                  <CardTitle className="text-lg">{product.name}</CardTitle>
                  <CardDescription className="text-2xl font-bold text-green-600">
                    {product.price}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <Button className="w-full">Add to Cart</Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
        
        <Card className="bg-gradient-to-r from-blue-500 to-purple-600 text-white">
          <CardHeader>
            <CardTitle className="text-2xl">Special Offer!</CardTitle>
            <CardDescription className="text-blue-100">
              Get 20% off on all products this week
            </CardDescription>
          </CardHeader>
          <CardContent>
            <Button variant="secondary" size="lg">
              Shop Now
            </Button>
          </CardContent>
        </Card>
      </main>
    </div>
  )
}`;
}

function getBlogPageContent(shadcn: boolean, tailwind: boolean): string {
  return `import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"

export default function Blog() {
  const posts = [
    {
      id: 1,
      title: "Getting Started with Next.js 14",
      excerpt: "Learn how to build modern web applications with the latest Next.js features.",
      date: "March 15, 2024",
      readTime: "5 min read"
    },
    {
      id: 2,
      title: "Building Beautiful UIs with shadcn/ui",
      excerpt: "Discover how to create stunning user interfaces with this powerful component library.",
      date: "March 12, 2024",
      readTime: "8 min read"
    },
    {
      id: 3,
      title: "TypeScript Best Practices",
      excerpt: "Essential tips and tricks for writing better TypeScript code in your projects.",
      date: "March 10, 2024",
      readTime: "6 min read"
    }
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm">
        <div className="max-w-4xl mx-auto p-6">
          <h1 className="text-4xl font-bold text-gray-900">My Blog</h1>
          <p className="text-xl text-gray-600 mt-2">Thoughts on web development and technology</p>
        </div>
      </header>
      
      <main className="max-w-4xl mx-auto p-6">
        <div className="space-y-8">
          {posts.map((post) => (
            <Card key={post.id} className="hover:shadow-md transition-shadow">
              <CardHeader>
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <CardTitle className="text-2xl mb-2">{post.title}</CardTitle>
                    <CardDescription className="text-base text-gray-600">
                      {post.excerpt}
                    </CardDescription>
                  </div>
                </div>
                <div className="flex items-center space-x-4 text-sm text-gray-500 mt-4">
                  <span>{post.date}</span>
                  <span>•</span>
                  <span>{post.readTime}</span>
                </div>
              </CardHeader>
              <CardContent>
                <Button variant="outline">Read More</Button>
              </CardContent>
            </Card>
          ))}
        </div>
        
        <div className="mt-12 text-center">
          <Card className="bg-blue-50 border-blue-200">
            <CardHeader>
              <CardTitle>Subscribe to Newsletter</CardTitle>
              <CardDescription>
                Get the latest posts delivered right to your inbox
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="flex gap-4 max-w-md mx-auto">
                <input
                  type="email"
                  placeholder="Enter your email"
                  className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
                <Button>Subscribe</Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
    </div>
  )
}`;
}

function getPortfolioPageContent(shadcn: boolean, tailwind: boolean): string {
  return `import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"

export default function Portfolio() {
  const projects = [
    {
      id: 1,
      title: "E-commerce Platform",
      description: "A full-stack e-commerce solution built with Next.js and Stripe",
      tech: ["Next.js", "TypeScript", "Stripe", "Prisma"],
      status: "Live"
    },
    {
      id: 2,
      title: "Task Management App",
      description: "Collaborative task management tool with real-time updates",
      tech: ["React", "Node.js", "Socket.io", "MongoDB"],
      status: "In Progress"
    },
    {
      id: 3,
      title: "Weather Dashboard",
      description: "Beautiful weather dashboard with interactive charts",
      tech: ["Vue.js", "Chart.js", "OpenWeather API"],
      status: "Completed"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
      <header className="bg-white shadow-sm">
        <div className="max-w-6xl mx-auto p-8">
          <div className="text-center">
            <div className="w-32 h-32 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full mx-auto mb-6 flex items-center justify-center text-4xl text-white font-bold">
              JD
            </div>
            <h1 className="text-4xl font-bold text-gray-900 mb-2">John Developer</h1>
            <p className="text-xl text-gray-600 mb-4">Full Stack Developer & UI/UX Designer</p>
            <div className="flex justify-center space-x-4">
              <Button>Contact Me</Button>
              <Button variant="outline">Download CV</Button>
            </div>
          </div>
        </div>
      </header>
      
      <main className="max-w-6xl mx-auto p-8">
        <section className="mb-12">
          <h2 className="text-3xl font-bold text-gray-900 mb-6">About Me</h2>
          <Card>
            <CardContent className="p-6">
              <p className="text-lg text-gray-700 leading-relaxed">
                I'm a passionate full-stack developer with 5+ years of experience building 
                web applications. I love creating beautiful, functional, and user-friendly 
                digital experiences using modern technologies like React, Next.js, and Node.js.
              </p>
            </CardContent>
          </Card>
        </section>
        
        <section className="mb-12">
          <h2 className="text-3xl font-bold text-gray-900 mb-6">Featured Projects</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {projects.map((project) => (
              <Card key={project.id} className="hover:shadow-lg transition-shadow">
                <CardHeader>
                  <div className="flex justify-between items-start">
                    <CardTitle className="text-xl">{project.title}</CardTitle>
                    <span className={\`px-2 py-1 text-xs rounded-full \${
                      project.status === 'Live' ? 'bg-green-100 text-green-800' :
                      project.status === 'In Progress' ? 'bg-yellow-100 text-yellow-800' :
                      'bg-blue-100 text-blue-800'
                    }\`}>
                      {project.status}
                    </span>
                  </div>
                  <CardDescription>{project.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex flex-wrap gap-2 mb-4">
                    {project.tech.map((tech) => (
                      <span key={tech} className="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded">
                        {tech}
                      </span>
                    ))}
                  </div>
                  <div className="flex space-x-2">
                    <Button size="sm" variant="outline">View Project</Button>
                    <Button size="sm" variant="ghost">GitHub</Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>
        
        <section>
          <Card className="bg-gradient-to-r from-blue-500 to-purple-600 text-white">
            <CardHeader className="text-center">
              <CardTitle className="text-2xl">Let's Work Together</CardTitle>
              <CardDescription className="text-blue-100">
                I'm always interested in new opportunities and exciting projects
              </CardDescription>
            </CardHeader>
            <CardContent className="text-center">
              <Button variant="secondary" size="lg">
                Get In Touch
              </Button>
            </CardContent>
          </Card>
        </section>
      </main>
    </div>
  )
}`;
}

async function createTemplateFiles(config: ProjectConfig, projectPath: string, ext: string, jsExt: string) {
  // Create utils file if shadcn is enabled
  if (config.shadcn) {
    const utilsContent = `import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}`;

    await fs.writeFile(path.join(projectPath, 'src/lib', `utils.${jsExt}`), utilsContent);
  }
}

async function createPublicAssets(projectPath: string) {
  // Create a simple favicon
  const faviconSvg = `<svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect width="32" height="32" rx="8" fill="#3B82F6"/>
  <path d="M8 12h16v8H8z" fill="white"/>
</svg>`;

  await fs.writeFile(path.join(projectPath, 'public/favicon.svg'), faviconSvg);
}
